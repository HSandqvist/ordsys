# Generated by Django 3.2.4 on 2021-08-10 13:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=40, unique=True, verbose_name='username')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=100, verbose_name='name')),
                ('active', models.BooleanField(default=True, help_text='Designates whether or not this item is currently on the menu.', verbose_name='active')),
                ('beverage', models.BooleanField(default=False, help_text='Designates whether or not this item is a beverage.', verbose_name='beverage')),
            ],
            options={
                'db_table': 'menu_item',
                'ordering': ['org', 'beverage', 'item_name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('beverages_only', models.BooleanField(help_text='Specifies if the order contains only beverages or only food.')),
                ('customer_number', models.CharField(max_length=6, verbose_name='customer_number')),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='order placed')),
                ('delivered_timestamp', models.DateTimeField(default=None, null=True, verbose_name='order delivered')),
                ('note', models.TextField(blank=True, help_text='Additional information provided by the customer.', verbose_name='note')),
                ('status', models.CharField(choices=[('Waiting', 'Waiting'), ('In progress', 'In Progress'), ('Done', 'Done'), ('In transit', 'In Transit'), ('Delivered', 'Delivered')], default='Waiting', help_text='The current status of the order.', max_length=11, verbose_name='status')),
                ('user', models.ForeignKey(help_text='Which user that submitted the order.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'db_table': 'order',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='organisation name')),
                ('theme', models.CharField(choices=[('utn', 'UTN'), ('utnarm', 'Utnarm'), ('td', 'Teknolog- och datavetarmottagningen'), ('klubbverket', 'Klubbverket'), ('forsranningen', 'Forsr√§nningen'), ('rebusrallyt', 'Rebusrallyt')], default='utn', help_text='Which theme to apply to the organisation.', max_length=20, verbose_name='theme')),
            ],
            options={
                'db_table': 'organisation',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('special_requests', models.CharField(blank=True, help_text='Modifications to the item requested by the customer', max_length=128, verbose_name='note')),
                ('menu', models.ForeignKey(help_text='Which item that was ordered.', on_delete=django.db.models.deletion.CASCADE, to='backend.menuitem', verbose_name='menu item')),
                ('order', models.ForeignKey(help_text='Which order this item belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='backend.order', verbose_name='order')),
            ],
            options={
                'db_table': 'order_item',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.AddField(
            model_name='menuitem',
            name='org',
            field=models.ForeignKey(help_text='The organisation this item belongs to.', on_delete=django.db.models.deletion.CASCADE, to='backend.organisation', verbose_name='organisation'),
        ),
        migrations.AddField(
            model_name='user',
            name='org',
            field=models.ForeignKey(help_text='Which organisation this user belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='users', to='backend.organisation', verbose_name='organisation'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'id'], name='order_item_order_id__id_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['beverages_only'], name='order_beverages_only_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['active'], name='menu_item_active_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['beverage'], name='menu_item_beverage_idx'),
        ),
        migrations.AddIndex(
            model_name='menuitem',
            index=models.Index(fields=['org', 'beverage', 'item_name'], name='menu_item_ordering_idx'),
        ),
        migrations.AddConstraint(
            model_name='menuitem',
            constraint=models.UniqueConstraint(fields=('item_name', 'org'), name='item_name__org_key'),
        ),
    ]
